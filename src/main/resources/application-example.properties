###############################################
# Example configuration for SummonerAPI
# Copy to application.properties and fill values
###############################################

# Riot API
riot.api.key=REPLACE_WITH_YOUR_RIOT_API_KEY
riot.api.region=euw1
riot.api.community-dragon.url=https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/profile-icons
# Max concurrent upstream requests (protect upstream & your API quota)
riot.api.max-concurrent=15

# Server
server.port=8080
server.forward-headers-strategy=framework

# App
# User-Agent string used for outbound HTTP clients (Riot API, DDragon)
app.user-agent=SummonerAPI/2.0 (github.com/zerox80/SummonerAPI)

# Data Dragon
# Default locale used when no request locale is available
ddragon.default-locale=de_DE

# Logging
logging.level.com.zerox80.riotapi=INFO
logging.level.org.springframework.web=INFO
access.log.enabled=true

# Caching
spring.cache.type=caffeine

# Actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.probes.enabled=true

# Swagger/OpenAPI (springdoc)
# Enabled by default for local/dev. In production, see application-prod.properties to disable.
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# HTTP response compression & HTTP/2 (behind reverse proxy, the proxy terminates TLS but compression still helps for local/testing)
server.compression.enabled=true
server.compression.min-response-size=1024
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript,text/javascript
server.http2.enabled=true
server.shutdown=graceful

# PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/summoner_db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA â€“ rely on Flyway migrations for schema changes (validate warns on drift)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false

# Flyway (recommended for production; when enabled, prefer ddl-auto=validate/none)
# spring.flyway.enabled=true
# Flyway will look for migrations in classpath:db/migration

# Note: You may also set environment variables instead of editing this file:
#   RIOT_API_KEY, RIOT_API_REGION, SPRING_DATASOURCE_URL, SPRING_DATASOURCE_USERNAME, SPRING_DATASOURCE_PASSWORD

###############################################
# Champion Build Aggregation (match-v5 sampling)
###############################################
# Enable scheduler (default false). Env override: BUILD_AGG_ENABLED=true
build.agg.enabled=false
# Queue to aggregate: 420 (SoloQ) or 440 (Flex). Env: BUILD_AGG_QUEUE_ID=420
build.agg.queue-id=420
# How many ranked pages to scan per tier/division. Env: BUILD_AGG_PAGES=1
build.agg.pages=1
# Matches to fetch per summoner. Env: BUILD_AGG_MATCHES_PER_SUMMONER=6
build.agg.matches-per-summoner=6
# Max summoners to sample. Env: BUILD_AGG_MAX_SUMMONERS=50
build.agg.max-summoners=50
# Comma-separated champion IDs to aggregate nightly (e.g., Ahri,Anivia). Env: BUILD_AGG_CHAMPIONS="Ahri,Anivia"
build.agg.champions=
# Cron for nightly aggregation (UTC). Env: BUILD_AGG_CRON="0 15 3 * * *"
build.agg.cron=0 15 3 * * *
# Allow manual trigger via POST /api/champions/{id}/aggregate. Env: BUILD_AGG_TRIGGER_ENABLED=true
build.agg.trigger-enabled=false
# Shared secret required in X-Aggregation-Token header for manual trigger. Env: BUILD_AGG_TRIGGER_TOKEN=super-secret
build.agg.trigger-token=

###############################################
# Rate Limiting
# Applies a lightweight IP-based fixed window limit to /api/* and /search
###############################################
rate.limit.enabled=true
rate.limit.window-ms=60000
rate.limit.max-requests=60
## Comma-separated Ant-style path patterns; defaults cover APIs and search
rate.limit.paths=/api/**,/search
# Trust proxy headers (Forwarded/X-Forwarded-For) for client IP resolution, e.g., behind NGINX/Ingress
rate.limit.trust-proxy=false
# Include X-RateLimit-* headers (disable for ultra-minimal responses)
rate.limit.include-headers=true
# Maximum distinct client IP windows stored in memory
rate.limit.cache-max-ips=100000
# Only honor Forwarded/X-Forwarded-* headers when the incoming remote address is in this allowlist (comma-separated exact IPs)
# Example (NGINX on same host): rate.limit.allowed-proxies=127.0.0.1
rate.limit.allowed-proxies=


###############################################
# HTTP Security Headers
###############################################
security.headers.enabled=true
# Override the Content Security Policy when hosting assets on additional domains
# security.headers.content-security-policy=default-src 'self'; img-src 'self' data: https://cdn.example;
# Uncomment to send Permissions-Policy for specific features (disabled by default)
# security.headers.permissions-policy-enabled=true
# security.headers.permissions-policy=geolocation=(), microphone=(), camera=()


###############################################
# UI / Match history pagination safeguards
###############################################
# Matches shown per page in the initial UI render
ui.matches.page-size=10
# Hard upper bound for /api/matches count parameter (protects Riot API quotas)
ui.matches.max-page-size=40
# Maximum allowed offset for the start parameter (requests beyond this are rejected)
ui.matches.max-start-offset=1000
