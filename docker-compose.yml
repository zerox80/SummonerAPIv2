services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: summoner_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 12
    restart: unless-stopped

  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      RIOT_API_KEY: ${RIOT_API_KEY}
      RIOT_API_REGION: ${RIOT_API_REGION:-euw1}
      RIOT_API_MAX_CONCURRENT: ${RIOT_API_MAX_CONCURRENT:-15}
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/summoner_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-}
      RATE_LIMIT_ENABLED: ${RATE_LIMIT_ENABLED:-true}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-60000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-60}
      RATE_LIMIT_PATHS: "${RATE_LIMIT_PATHS:-/api/**,/search}"
      RATE_LIMIT_TRUST_PROXY: ${RATE_LIMIT_TRUST_PROXY:-false}
      RATE_LIMIT_INCLUDE_HEADERS: ${RATE_LIMIT_INCLUDE_HEADERS:-true}
      RATE_LIMIT_CACHE_MAX_IPS: ${RATE_LIMIT_CACHE_MAX_IPS:-100000}
      RATE_LIMIT_ALLOWED_PROXIES: ${RATE_LIMIT_ALLOWED_PROXIES:-}
      RIOT_API_COMMUNITY_DRAGON_URL: ${RIOT_API_COMMUNITY_DRAGON_URL:-https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/profile-icons}
      # App User-Agent for outbound HTTP calls (maps to app.user-agent)
      APP_USER_AGENT: "${APP_USER_AGENT:-SummonerAPI/2.0 (github.com/zerox80/SummonerAPI)}"
      # Default DDragon locale when no request locale is present (maps to ddragon.default-locale)
      DDRAGON_DEFAULT_LOCALE: ${DDRAGON_DEFAULT_LOCALE:-de_DE}
      # Flyway: baseline existing non-empty schema and then run migrations > baseline version
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
      SPRING_FLYWAY_BASELINE_VERSION: "0"
      # Use Flyway for schema management and allow Hibernate to create/update any remaining tables
      SPRING_JPA_HIBERNATE_DDL_AUTO: "validate"
      # Build aggregation (scheduler + manual trigger)
      BUILD_AGG_ENABLED: ${BUILD_AGG_ENABLED:-false}
      BUILD_AGG_QUEUE_ID: ${BUILD_AGG_QUEUE_ID:-420}
      BUILD_AGG_PAGES: ${BUILD_AGG_PAGES:-1}
      BUILD_AGG_MATCHES_PER_SUMMONER: ${BUILD_AGG_MATCHES_PER_SUMMONER:-6}
      BUILD_AGG_MAX_SUMMONERS: ${BUILD_AGG_MAX_SUMMONERS:-50}
      BUILD_AGG_CHAMPIONS: ${BUILD_AGG_CHAMPIONS:-}
      BUILD_AGG_CRON: ${BUILD_AGG_CRON:-0 15 3 * * *}
      BUILD_AGG_TRIGGER_ENABLED: ${BUILD_AGG_TRIGGER_ENABLED:-false}
      UI_MATCHES_PAGE_SIZE: ${UI_MATCHES_PAGE_SIZE:-10}
      UI_MATCHES_MAX_PAGE_SIZE: ${UI_MATCHES_MAX_PAGE_SIZE:-40}
      UI_MATCHES_MAX_START_OFFSET: ${UI_MATCHES_MAX_START_OFFSET:-1000}
    ports:
      - "${APP_HTTP_PORT:-8080}:8080"
    restart: unless-stopped

volumes:
  db_data:
