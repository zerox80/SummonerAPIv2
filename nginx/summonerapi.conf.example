# NGINX Reverse Proxy (Example) for SummonerAPI
#
# 1) Copy to /etc/nginx/sites-available/summonerapi.conf
# 2) sudo ln -s /etc/nginx/sites-available/summonerapi.conf /etc/nginx/sites-enabled/summonerapi.conf
# 3) Replace `your.domain.tld` with your real domain
# 4) Adjust upstream port to match your host port (APP_HTTP_PORT, e.g. 8081)
# 5) Create ACME webroot: sudo mkdir -p /var/www/certbot
# 6) Test & reload: sudo nginx -t && sudo systemctl reload nginx
# 7) Issue TLS certs: sudo certbot --nginx -d your.domain.tld

upstream summonerapi_upstream {
    # Match the host-side port from docker compose (default 8080 via APP_HTTP_PORT)
    server 127.0.0.1:8080;
    keepalive 64;
}

# HTTP: Redirect to HTTPS and serve ACME challenges
server {
    listen 80;
    listen [::]:80;
    server_name your.domain.tld;

    # Let's Encrypt HTTP-01 challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS: Reverse proxy to the Spring Boot app
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your.domain.tld;

    # TLS certs (managed by certbot)
    ssl_certificate /etc/letsencrypt/live/your.domain.tld/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your.domain.tld/privkey.pem;
    # These files are created/managed by certbot; include if present
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header Referrer-Policy strict-origin-when-cross-origin;
    add_header X-XSS-Protection "1; mode=block";
    # Enforce HTTPS for 180 days across subdomains; consider 'preload' only after testing
    add_header Strict-Transport-Security "max-age=15552000; includeSubDomains" always;

    # Proxy headers
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;

    proxy_connect_timeout 10s;
    proxy_send_timeout    60s;
    proxy_read_timeout    60s;

    # Optional gzip for text assets
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml+rss text/javascript application/font-woff application/font-woff2 image/svg+xml;
    gzip_min_length 256;

    # Static assets (cacheable)
    location ~* \.(?:css|js|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
        proxy_pass http://summonerapi_upstream;
    }

    # Optional: Apply a basic request rate limit to the /search endpoint to deter abuse
    # NOTE: You must define a limit_req_zone in the http{} block of your main nginx.conf, e.g.:
    #   limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/m;
    # Then uncomment the 'limit_req' line below.
    location = /search {
        # limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://summonerapi_upstream;
    }

    # Default: proxy all to app
    location / {
        proxy_pass http://summonerapi_upstream;
    }
}

